var displayTree = tree => console.log(JSON.stringify(tree, null, 2));
function Node(value) {
  this.value = value;
  this.left = null;
  this.right = null;
}
function BinarySearchTree() {
  this.root = null;
  // change code below this line
  this.levelOrder = function() {
    if(this.root === null)
      return null;

    let result = [];

    function levelOrderUtil(node) {
      let queue = [];
      queue.push(node);

      while(queue.length) {
        let node = queue.shift();
        result.push(node.value);
        if(node.left) queue.push(node.left);
        if(node.right) queue.push(node.right);
      }
    }

    levelOrderUtil(this.root);

    return result;
  }

  this.reverseLevelOrder = function() {
    if(this.root === null)
      return null;

    let result = [];

    function reverseLevelOrderUtil(node) {
      let queue = [];
      queue.push(node);

      while(queue.length) {
        let node = queue.shift();
        result.push(node.value);
        if(node.right) queue.push(node.right);
        if(node.left) queue.push(node.left);
      }
    }

    reverseLevelOrderUtil(this.root);

    return result;
  }
  // change code above this line
}

