function LinkedList() {
  var length = 0;
  var head = null;

  var Node = function(element){ // {1}
    this.element = element;
    this.next = null;
  };

  this.size = function(){
    return length;
  };

  this.head = function(){
    return head;
  };

  this.add = function(element){
    var node = new Node(element);
    if(head === null){
        head = node;
    } else {
        var currentNode = head;

        while(currentNode.next){
            currentNode  = currentNode.next;
        }

        currentNode.next = node;
    }

    length++;
  };

  // Only change code below this line
  this.removeAt = function(idx) {
    if(length <= idx || idx < 0)
      return null;

    --length;

    if(idx === 0) {
      let ret = head.element;
      head = head.next;
      return ret;
    }

    let cur = head;
    let prev = null;
    while(idx--) {
      prev = cur;
      cur = cur.next;
    }

    prev.next = cur.next;    
    
    return cur.element;
  }
  // Only change code above this line
}
